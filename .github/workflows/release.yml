name: Release

on:
  workflow_dispatch:
    inputs:
      releaseType:
        description: Release Type, choose skip to just build and publish without a version bump
        type: choice
        required: true
        default: official
        options:
          - official
          - alpha
          - beta
          - rc
          - skip

jobs:
  version-tag-create-release:
    name: Version, Tag, and Create Release
    runs-on: ubuntu-latest
    # Ensure release is only run on main
    if: ${{ github.ref == 'refs/heads/main' && inputs.releaseType != 'skip' }}
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3
        with:
          # Grab all the git history for building changelog
          fetch-depth: 0

      - name: Setup Node.js environment
        uses: actions/setup-node@v4
        with:
          node-version: 18.18.x
          cache: npm

      - name: NPM Install
        run: npm install

      - name: Update Official Version
        if: ${{ inputs.releaseType == 'official' }}
        run: npm run version

      - name: Update Prerelease Version
        if: ${{ inputs.releaseType != 'official' }}
        run: npm run version -- --prerelease ${{ inputs.releaseType }}

      - name: Get Version
        id: get-version
        run: echo "::set-output name=version::$(node --print "'v'.concat(require('./package.json').version)")"

      - name: Commit Version
        id: commit-version
        uses: EndBug/add-and-commit@v9
        with:
          message: ${{ format('release {0}', steps.get-version.outputs.version) }}
          pathspec_error_handling: exitImmediately
          tag: ${{ steps.get-version.outputs.version }}

      - name: Exit on Commit, Push, Tag, Tag Push Failure
        if: ${{ steps.commit-version.outputs.committed != 'true' || steps.commit-version.outputs.pushed != 'true' || steps.commit-version.outputs.tagged != 'true' || steps.commit-version.outputs.tag_pushed != 'true'}}
        uses: actions/github-script@v3
        with:
          script: |
              core.setFailed('Commit failed')

      - name: Create Release
        uses: ncipollo/release-action@v1
        with:
          bodyFile: "RELEASE-NOTES.md"
          draft: true
          name: ${{ steps.get-version.outputs.version }}
          prerelease: ${{ inputs.releaseType != 'official' }}
          tag: ${{ steps.get-version.outputs.version }}

  lint-typecheck-build-and-publish:
    needs: version-tag-create-release
    if: always() && (needs.version-tag-create-release.result == 'success' || needs.version-tag-create-release.result == 'skipped')
    name: Lint, Typecheck, Build & Publish
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
    steps:
      - name: Check out Git repository
        uses: actions/checkout@v2
        with:
          # Grab the latest commit from the main branch
          # This is needed to ensure the release is built from the latest commit from above
          ref: main

      - name: Setup Node.js environment
        uses: actions/setup-node@v4
        with:
          node-version: 18.18.x
          cache: npm

      - name: Lint, Typecheck, Build & Publish Electron App
        uses: samuelmeuli/action-electron-builder@v1
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          # lint, typecheck and build the app before running electron-builder
          build_script_name: prebuild
          args: --publish onTagOrDraft

      - name: Zip the MacOS App
        if: ${{ matrix.os == 'macos-latest' }}
        run: |
          zip -r releases/mas-arm64/GimbalGhost.zip releases/mas-arm64/Gimbal\ Ghost.app

      - name: Publish MacOS Artifacts to Release
        if: ${{ matrix.os == 'macos-latest' }}
        uses: softprops/action-gh-release@v2
        with:
          files: releases/mas-arm64/GimbalGhost.zip

      - name: Upload Release Artifacts
        uses: actions/upload-artifact@v4
        with:
          name: ${{ matrix.os }}-releases-directory
          path: releases/
          if-no-files-found: error
          

        